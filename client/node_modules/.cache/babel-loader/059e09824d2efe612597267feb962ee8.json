{"ast":null,"code":"var _jsxFileName = \"/home/john/Desktop/vacnew/vacation_crash/client/src/components/pages/auth/login.tsx\";\nimport * as React from \"react\";\nimport { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nexport class SignIn extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setUserName = args => {\n      const userName = args.target.value;\n      const user = { ...this.state.user\n      };\n      user.userName = userName;\n      console.log(user);\n      this.setState({\n        user\n      });\n    };\n\n    this.setUserPassword = args => {\n      const password = args.target.value;\n      const user = { ...this.state.user\n      };\n      user.password = password;\n      this.setState({\n        user\n      });\n    };\n\n    this.logUser = () => {\n      const options = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          // What type we are sending (MIME Types)\n          Accept: \"application/json\" // What type we are expecting to get back (MIME Types)\n\n        },\n        body: JSON.stringify(this.state.user)\n      };\n      fetch(\"http://localhost:3004/api/auth/login\", options).then(async response => {\n        if (!response.ok) throw new Error((await response.text()));\n        return response;\n      }).then(response => response.json().then(() => this.setState(() => ({\n        toDashboard: true\n      }))) // .then(user => {\n      //   this.props.history.push(\"/vacations\"); // Redirect to \"/products\" route.\n      ).catch(err => console.log(err.message));\n    };\n\n    this.loggedIn = () => {\n      console.log(\"user is now logged in\");\n    };\n\n    this.state = {\n      toDashboard: false,\n      user: {\n        userName: \"\",\n        password: \"\"\n      }\n    };\n  }\n\n  //   const options = {\n  //     method: \"POST\",\n  //     headers: {\n  //       \"Content-Type\": \"application/json\", // What type we are sending (MIME Types)\n  //       Accept: \"application/json\" // What type we are expecting to get back (MIME Types)\n  //     },\n  //     // body: JSON.stringify(this.state.user) // What data we are sending\n  //     body: this.state.user // What data we are sending\n  //   };\n  //   fetch(\"http://localhost:3003/api/auth/login\", options)\n  //     .then(response => response.json())\n  //     .then(user => {\n  //       alert(\"user is now logged in, user:  \" + this.state.user.userName);\n  //       this.props.history.push(\"/vacations\"); // Redirect to \"/products\" route.\n  //     })\n  //     .catch(err => alert(err.message));\n  // };\n  render() {\n    if (this.state.toDashboard === true) {\n      return React.createElement(Redirect, {\n        to: \"/vacations\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: \"signin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Name...\",\n      onBlur: this.setUserName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Password...\",\n      onChange: this.setUserPassword,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      type: \"button\",\n      onClick: this.logUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Log me in, Scottie!\")));\n  }\n\n}","map":{"version":3,"sources":["/home/john/Desktop/vacnew/vacation_crash/client/src/components/pages/auth/login.tsx"],"names":["React","Component","Redirect","SignIn","constructor","props","setUserName","args","userName","target","value","user","state","console","log","setState","setUserPassword","password","logUser","options","method","headers","Accept","body","JSON","stringify","fetch","then","response","ok","Error","text","json","toDashboard","catch","err","message","loggedIn","render"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { Component, SyntheticEvent } from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\ninterface LoginState {\n  toDashboard: boolean;\n  user: {\n    userName: String;\n    password: String;\n  };\n}\n\nexport class SignIn extends Component<any, LoginState> {\n  public constructor(props: any) {\n    super(props);\n    this.state = {\n      toDashboard: false,\n      user: {\n        userName: \"\",\n        password: \"\"\n      }\n    };\n  }\n  private setUserName = (args: SyntheticEvent) => {\n    const userName = (args.target as HTMLInputElement).value;\n    const user = { ...this.state.user };\n    user.userName = userName;\n\n    console.log(user);\n    this.setState({ user });\n  };\n  private setUserPassword = (args: SyntheticEvent) => {\n    const password = (args.target as HTMLInputElement).value;\n    const user = { ...this.state.user };\n    user.password = password;\n    this.setState({ user });\n  };\n\n  private logUser = () => {\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\", // What type we are sending (MIME Types)\n        Accept: \"application/json\" // What type we are expecting to get back (MIME Types)\n      },\n      body: JSON.stringify(this.state.user)\n    };\n\n    fetch(\"http://localhost:3004/api/auth/login\", options)\n      .then(async response => {\n        if (!response.ok) throw new Error(await response.text());\n        return response;\n      })\n      .then(\n        response =>\n          response.json().then(() =>\n            this.setState(() => ({\n              toDashboard: true\n            }))\n          )\n\n        // .then(user => {\n        //   this.props.history.push(\"/vacations\"); // Redirect to \"/products\" route.\n      )\n      .catch(err => console.log(err.message));\n  };\n  public loggedIn = () => {\n    console.log(\"user is now logged in\");\n  };\n\n  //   const options = {\n  //     method: \"POST\",\n  //     headers: {\n  //       \"Content-Type\": \"application/json\", // What type we are sending (MIME Types)\n  //       Accept: \"application/json\" // What type we are expecting to get back (MIME Types)\n  //     },\n  //     // body: JSON.stringify(this.state.user) // What data we are sending\n  //     body: this.state.user // What data we are sending\n  //   };\n  //   fetch(\"http://localhost:3003/api/auth/login\", options)\n  //     .then(response => response.json())\n  //     .then(user => {\n  //       alert(\"user is now logged in, user:  \" + this.state.user.userName);\n  //       this.props.history.push(\"/vacations\"); // Redirect to \"/products\" route.\n  //     })\n  //     .catch(err => alert(err.message));\n  // };\n\n  render() {\n    if (this.state.toDashboard === true) {\n      return <Redirect to=\"/vacations\" />;\n    }\n    return (\n      <div className=\"signin\">\n        <form>\n          <input type=\"text\" placeholder=\"Name...\" onBlur={this.setUserName} />\n          <br /> <br />\n          <input\n            type=\"text\"\n            placeholder=\"Password...\"\n            onChange={this.setUserPassword}\n          />\n          <br /> <br />\n          <button\n            className=\"btn btn-primary\"\n            type=\"button\"\n            onClick={this.logUser}\n          >\n            Log me in, Scottie!\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}